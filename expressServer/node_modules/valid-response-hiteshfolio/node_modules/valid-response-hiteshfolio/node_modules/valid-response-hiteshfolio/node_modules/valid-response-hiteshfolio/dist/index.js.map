{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["const responseMessages = {\r\n    validationFailed: 'Validation failed',\r\n    operationSuccessful: 'Operation successful',\r\n    notFound: 'Resource not found',\r\n    unauthorized: 'Unauthorized access',\r\n    internalServerError: 'Internal server error',\r\n};\r\n\r\nconst statusCodes = {\r\n    success: 200,\r\n    created: 201,\r\n    badRequest: 400,\r\n    unauthorized: 401,\r\n    notFound: 404,\r\n    internalServerError: 500,\r\n};\r\n\r\nconst resError = (res, errors, message, dynamicStatus = false) => {\r\n    let statusCode = statusCodes.badRequest;\r\n\r\n    if (dynamicStatus) {\r\n        if (message.toLowerCase().includes('not found')) {\r\n            statusCode = statusCodes.notFound;\r\n        } else if (message.toLowerCase().includes('unauthorized')) {\r\n            statusCode = statusCodes.unauthorized;\r\n        }\r\n    }\r\n\r\n    console.error(`[Error ${statusCode}]: ${message}`, errors);\r\n\r\n    return res.status(statusCode).json({\r\n        data: null,\r\n        errors: true,\r\n        message: message || responseMessages.validationFailed,\r\n        success: false,\r\n    });\r\n};\r\n\r\nconst resSuccess = (res, data, message, dynamicStatus = false) => {\r\n    let statusCode = statusCodes.success;\r\n\r\n    if (dynamicStatus && data && data.status) {\r\n        statusCode = data.status === 'created' ? statusCodes.created : statusCodes.success;\r\n    }\r\n\r\n    return res.status(statusCode).json({\r\n        data,\r\n        errors: false,\r\n        message: message || responseMessages.operationSuccessful,\r\n        success: true,\r\n    });\r\n};\r\n\r\nmodule.exports = { resError, resSuccess };\r\n"],"names":["responseMessages","validationFailed","operationSuccessful","notFound","unauthorized","internalServerError","statusCodes","success","created","badRequest","resError","res","errors","message","dynamicStatus","statusCode","toLowerCase","includes","console","error","status","json","data","resSuccess","module","exports"],"mappings":";;AAAA,MAAMA,gBAAgB,GAAG;AACrBC,EAAAA,gBAAgB,EAAE,mBAAmB;AACrCC,EAAAA,mBAAmB,EAAE,sBAAsB;AAC3CC,EAAAA,QAAQ,EAAE,oBAAoB;AAC9BC,EAAAA,YAAY,EAAE,qBAAqB;AACnCC,EAAAA,mBAAmB,EAAE,uBAAA;AACzB,CAAC,CAAA;AAED,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,GAAG;AACZC,EAAAA,OAAO,EAAE,GAAG;AACZC,EAAAA,UAAU,EAAE,GAAG;AACfL,EAAAA,YAAY,EAAE,GAAG;AACjBD,EAAAA,QAAQ,EAAE,GAAG;AACbE,EAAAA,mBAAmB,EAAE,GAAA;AACzB,CAAC,CAAA;AAED,MAAMK,QAAQ,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,aAAa,GAAG,KAAK,KAAK;AAC9D,EAAA,IAAIC,UAAU,GAAGT,WAAW,CAACG,UAAU,CAAA;AAEvC,EAAA,IAAIK,aAAa,EAAE;IACf,IAAID,OAAO,CAACG,WAAW,EAAE,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC7CF,UAAU,GAAGT,WAAW,CAACH,QAAQ,CAAA;AACrC,KAAC,MAAM,IAAIU,OAAO,CAACG,WAAW,EAAE,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;MACvDF,UAAU,GAAGT,WAAW,CAACF,YAAY,CAAA;AACzC,KAAA;AACJ,GAAA;EAEAc,OAAO,CAACC,KAAK,CAAC,CAAUJ,OAAAA,EAAAA,UAAU,MAAMF,OAAO,CAAA,CAAE,EAAED,MAAM,CAAC,CAAA;EAE1D,OAAOD,GAAG,CAACS,MAAM,CAACL,UAAU,CAAC,CAACM,IAAI,CAAC;AAC/BC,IAAAA,IAAI,EAAE,IAAI;AACVV,IAAAA,MAAM,EAAE,IAAI;AACZC,IAAAA,OAAO,EAAEA,OAAO,IAAIb,gBAAgB,CAACC,gBAAgB;AACrDM,IAAAA,OAAO,EAAE,KAAA;AACb,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAED,MAAMgB,UAAU,GAAGA,CAACZ,GAAG,EAAEW,IAAI,EAAET,OAAO,EAAEC,aAAa,GAAG,KAAK,KAAK;AAC9D,EAAA,IAAIC,UAAU,GAAGT,WAAW,CAACC,OAAO,CAAA;AAEpC,EAAA,IAAIO,aAAa,IAAIQ,IAAI,IAAIA,IAAI,CAACF,MAAM,EAAE;AACtCL,IAAAA,UAAU,GAAGO,IAAI,CAACF,MAAM,KAAK,SAAS,GAAGd,WAAW,CAACE,OAAO,GAAGF,WAAW,CAACC,OAAO,CAAA;AACtF,GAAA;EAEA,OAAOI,GAAG,CAACS,MAAM,CAACL,UAAU,CAAC,CAACM,IAAI,CAAC;IAC/BC,IAAI;AACJV,IAAAA,MAAM,EAAE,KAAK;AACbC,IAAAA,OAAO,EAAEA,OAAO,IAAIb,gBAAgB,CAACE,mBAAmB;AACxDK,IAAAA,OAAO,EAAE,IAAA;AACb,GAAC,CAAC,CAAA;AACN,CAAC,CAAA;AAEDiB,MAAM,CAACC,OAAO,GAAG;EAAEf,QAAQ;AAAEa,EAAAA,UAAAA;AAAW,CAAC;;"}